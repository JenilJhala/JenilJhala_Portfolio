@using SmallUsedCars_WebApp.Models
@using SmallUsedCars_WebApp.ViewModels
@model ReportViewModel

<div class="container mt-5">
    <!-- Main Title -->
    <h2 class="mb-4 fs-1 text-center">Report Summary</h2>

    <!-- Error Message -->
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger fs-5 text-center">
            <strong>Error:</strong> @Model.ErrorMessage
        </div>
    }

    <!-- Report Form Card -->
    <div class="card shadow mb-4">
        <div class="card-body">
            <form asp-action="List" method="get">
                <div class="row mb-4">
                    <!-- Select Employees -->
                    <div class="col-md-12">
                        <label class="fs-4 mb-2"><strong>Select Employees</strong></label>
                        <div class="form-group border p-3 rounded" id="employeeCheckboxes">
                            @foreach (var employee in Model.Employees)
                            {
                                <div class="form-check mb-2">
                                    <input type="checkbox"
                                           class="form-check-input employee-checkbox"
                                           name="SelectedEmployeeIds"
                                           value="@employee.EmployeeId"
                                    @(Model.SelectedEmployeeIds.Contains(employee.EmployeeId) ? "checked" : "") />
                                    <label class="form-check-label fs-5">@employee.EmployeeName</label>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="row mb-4">
                    <!-- Sales Period -->
                    <div class="col-md-6 mb-4">
                        <label class="fs-4 mb-2"><strong>Sales Period</strong></label>
                        <div class="input-group">
                            <input type="month"
                                   id="salesStartDate"
                                   name="SalesStartDate"
                                   class="form-control date-input"
                                   value="@(Model.SalesStartDate?.ToString("yyyy-MM") ?? "")" />
                            <input type="month"
                                   id="salesEndDate"
                                   name="SalesEndDate"
                                   class="form-control date-input"
                                   value="@(Model.SalesEndDate?.ToString("yyyy-MM") ?? "")" />
                        </div>
                    </div>

                    <!-- Commission Period (hidden if ranking checked) -->
                    <div class="col-md-6 mb-4" id="commissionPeriodSection">
                        <label class="fs-4 mb-2"><strong>Commission Period</strong></label>
                        <div class="input-group">
                            <input type="month"
                                   id="commissionStartDate"
                                   name="CommissionStartDate"
                                   class="form-control date-input"
                                   value="@(Model.CommissionStartDate?.ToString("yyyy-MM") ?? "")" />
                            <input type="month"
                                   id="commissionEndDate"
                                   name="CommissionEndDate"
                                   class="form-control date-input"
                                   value="@(Model.CommissionEndDate?.ToString("yyyy-MM") ?? "")" />
                        </div>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="d-flex justify-content-between align-items-center">
                    <button type="submit" class="btn btn-primary btn-lg fs-4">
                        View Reports
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Sales Ranking Card -->
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-12 d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <input type="checkbox" id="rankingCheckbox" class="form-check-input me-2" />
                        <label for="rankingCheckbox" class="fs-5 fw-bold mb-0">
                            Do you want to see the sales ranking?
                        </label>
                    </div>

                    <!-- View Sales Ranking form -->
                    <form asp-action="SalesRanking" method="get" id="rankingForm" class="d-inline">
                        <input type="hidden" name="startDate" id="rankingStartDate" />
                        <input type="hidden" name="endDate" id="rankingEndDate" />
                        <button type="submit"
                                class="btn btn-secondary btn-lg fs-4 ms-4"
                                id="rankingButton"
                                disabled>
                            View Sales Ranking
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Results -->
    @if (Model.SalesRecords.Any() || Model.CommissionRecords.Any())
    {
        <div class="card shadow mb-4">
            <div class="card-body">
                <h3 class="mt-2 mb-3 fs-4">Report Results</h3>

                <!-- Sales Records -->
                @if (Model.SalesRecords.Any())
                {
                    <h4 class="mt-3 fs-4">Sales Records</h4>
                    <table class="table table-bordered table-hover fs-5">
                        <thead class="table-light">
                            <tr>
                                <th>Employee</th>
                                <th>Period</th>
                                <th>Amounts</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                decimal totalSales = 0;
                            }
                            @foreach (var record in Model.SalesRecords)
                            {
                                totalSales += record.Amount;
                                <tr>
                                    <td>@record.EmployeeName</td>
                                    <td>@record.Period</td>
                                    <td>$@record.Amount.ToString("N2")</td>
                                </tr>
                            }
                            <tr class="fw-bold bg-light">
                                <td colspan="2" class="text-end">Total Sales</td>
                                <td>$@totalSales.ToString("N2")</td>
                            </tr>
                        </tbody>
                    </table>
                }

                <!-- Commission Records -->
                <h4 class="mt-3 fs-4">Commission Records</h4>
                <table class="table table-bordered table-hover fs-5">
                    <thead class="table-light">
                        <tr>
                            <th>Employee</th>
                            <th>Period</th>
                            <th>Amounts</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            decimal totalCommission = 0;
                        }
                        @foreach (var record in Model.CommissionRecords)
                        {
                            totalCommission += record.Amount;
                            <tr>
                                <td>@record.EmployeeName</td>
                                <td>@record.Period</td>
                                <td>$@record.Amount.ToString("N2")</td>
                            </tr>
                        }
                        <tr class="fw-bold bg-light">
                            <td colspan="2" class="text-end">Total Commission</td>
                            <td>$@totalCommission.ToString("N2")</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let today = new Date();
        let maxMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);

        let fields = document.querySelectorAll(".date-input");
        fields.forEach(input => {
            if (input) {
                input.setAttribute("max", maxMonth.toISOString().slice(0, 7));
            }
        });

        document.getElementById("rankingCheckbox").addEventListener("change", function () {
            let rankingButton = document.getElementById("rankingButton");
            let commissionSection = document.getElementById("commissionPeriodSection");
            let commissionInputs = commissionSection.querySelectorAll("input");

            if (this.checked) {
                rankingButton.disabled = false;
                rankingButton.classList.remove("btn-secondary");
                rankingButton.classList.add("btn-success");

                // Uncheck employees & hide commission fields
                document.querySelectorAll(".employee-checkbox").forEach(cb => cb.checked = false);
                commissionSection.style.display = "none";
                commissionInputs.forEach(input => {
                    input.disabled = true;
                    input.value = "";
                });
            } else {
                rankingButton.disabled = true;
                rankingButton.classList.remove("btn-success");
                rankingButton.classList.add("btn-secondary");

                commissionSection.style.display = "block";
                commissionInputs.forEach(input => input.disabled = false);
            }
        });

        // Only allow one employee checkbox at a time
        document.querySelectorAll(".employee-checkbox").forEach(checkbox => {
            checkbox.addEventListener("change", function () {
                if (this.checked) {
                    document.querySelectorAll(".employee-checkbox").forEach(cb => {
                        if (cb !== this) cb.checked = false;
                    });
                    // Uncheck the ranking box
                    document.getElementById("rankingCheckbox").checked = false;
                }
            });
        });

        // On "View Sales Ranking" submit, copy the SalesPeriod to hidden fields
        document.getElementById("rankingForm").addEventListener("submit", function (event) {
            let salesStartDate = document.getElementById("salesStartDate").value;
            let salesEndDate = document.getElementById("salesEndDate").value;

            if (!salesStartDate || !salesEndDate) {
                alert("Please select a valid sales period before viewing the ranking.");
                event.preventDefault();
                return;
            }
            // Copy to hidden fields
            document.getElementById("rankingStartDate").value = salesStartDate;
            document.getElementById("rankingEndDate").value = salesEndDate;
        });
    });
</script>
